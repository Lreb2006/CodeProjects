//给定一个正整数N，请计算N个N相乘的结果的个位数是多少（1<=N<=1000)
#include<iostream>
using namespace std;

int main(void)
{
    int n;
    cin>>n;
    int sum = 1;
    //数据规模很大，暴力可能超时，基本思路就是找规律（循环节）
    //任何以0结尾的数字的任意正整数次幂的个位数都是0。
    //任何以1结尾的数字的任意正整数次幂的个位数都是1。
    //任何以5结尾的数字的任意正整数次幂的个位数都是5。
    //任何以6结尾的数字的任意正整数次幂的个位数都是6。
    //以2, 3, 7, 8结尾的数字在连续的幂次下会形成一个长度为4的循环。
    //以4或9结尾的数字在连续的幂次下会形成一个长度为2的循环。
    for(int i = 1;i<=n;i++){
        sum = sum*n;    //先全部乘完再取个位数很有可能会爆栈，所以每次乘完就取个位再乘再取个位
        sum = sum%10;  
    }
    cout<<sum<<endl;
    return 0;   
}